generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  role          Role      @default(USER)
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Role {
  USER
  ADMIN
}

model Category {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  slug        String     @unique
  description String?
  menuItems   MenuItem[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model MenuItem {
  id          Int      @id @default(autoincrement())
  name        String
  price       Float
  description String?
  image       String
  isAvailable Boolean  @default(true)
  isPopular   Boolean  @default(false)
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Contact {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  message   String
  createdAt DateTime @default(now())
}

model HeroContent {
  id                  Int      @id @default(1)
  title               String
  subtitle            String?
  description         String
  images              Json // Store as JSON array
  primaryButtonText   String
  primaryButtonLink   String
  secondaryButtonText String?
  secondaryButtonLink String?
  updatedAt           DateTime @updatedAt
}

model BusinessHours {
  id        Int      @id @default(1)
  monday    Json
  tuesday   Json
  wednesday Json
  thursday  Json
  friday    Json
  saturday  Json
  sunday    Json
  updatedAt DateTime @updatedAt
}

model ContactInformation {
  id        Int      @id @default(1)
  address   String
  phone1    String
  phone2    String?
  email     String
  mapUrl    String
  updatedAt DateTime @updatedAt
}

model SocialSettings {
  id        Int      @id @default(1)
  links     Json     @default("{}")
  updatedAt DateTime @updatedAt
}